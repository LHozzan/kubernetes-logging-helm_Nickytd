{{- if .Values.kafka.enabled }} 
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name}}-fluentd 
  labels: {{ include "logging.labels" . | indent 4 }}
data:
  fluent.conf: |-
     <system>
       log_level info
        ignore_same_log_interval 10s
       <log>
         format json
       </log>  
       root_dir /var/log/fluentd
     </system>

     @include 00-sources.conf
     @include 01-prometheus.conf
     @include 02-generate-id.conf
     @include 03-de-dot.conf
     @include 10-rewrite-tags.conf
     @include 20-output.conf
     @include 99-error.conf
     #@include 90-debug.conf
     
  00-sources.conf: |-
    <source>
      @type rdkafka_group      
      format json
      topics containers
      max_wait_time_ms 1000
      max_batch_size 20000
      kafka_configs {
        "bootstrap.servers": "{{ include "kafkaBrokers" (dict "replicas" .Values.kafka.replicas "releaseName" $.Release.Name) }}",
        "group.id": "fluentd"
      }
    </source>

  01-prometheus.conf: |-
    # Prometheus metric exposed on 0.0.0.0:24231/metrics
    <source>
      @type prometheus
      @id in_prometheus
      bind "#{ENV['FLUENT_PROMETHEUS_BIND'] || '0.0.0.0'}"
      port "#{ENV['FLUENT_PROMETHEUS_PORT'] || '24231'}"
      metrics_path "#{ENV['FLUENT_PROMETHEUS_PATH'] || '/metrics'}"
    </source>

  02-generate-id.conf: |-
    <filter containers.**>
      @type elasticsearch_genid
      use_entire_record true
      hash_type sha1
      hash_id_key msg_id
      separator _
      inc_tag_as_key true
      inc_time_as_key true
    </filter>

  03-de-dot.conf: |-
    <filter containers.**>
      @type             dedot
      de_dot            true
      de_dot_separator  _
      de_dot_nested     true
    </filter>

  10-rewrite-tags.conf: |-
    <match containers.**>
      @type rewrite_tag_filter
      <rule>
        key $['kubernetes']['labels']['app_kubernetes_io/name']
        pattern /^ingress-nginx$/
        tag nginx
      </rule>
      <rule>
        key SYSTEMD_UNIT
        pattern /^(.+)$/
        tag systemd
      </rule>
      <rule>
        key log
        pattern /^(.+)$/
        tag all
      </rule>
    </match>

  20-output.conf: |-
      <match nginx.**>
        @type elasticsearch
        host "#{ENV['FLUENT_OPENSEARCH_HOST']}"
        port "#{ENV['FLUENT_OPENSEARCH_PORT']}"
        user "#{ENV['FLUENT_OPENSEARCH_USER']}"
        password "#{ENV['FLUENT_OPENSEARCH_PASSWORD']}"
        scheme "https"
        logstash_format true
        logstash_prefix nginx
        ca_file "/fluentd/ssl/root-ca.pem"
        id_key msg_id
        remove_keys msg_id time
        time_key @timestamp
        reconnect_on_error true 
        request_timeout 30s                
        <buffer tag>
          @type file
          flush_mode immediate
          flush_at_shutdown true
          flush_thread_count 2
          overflow_action block
          retry_type periodic
          retry_forever true
          path /var/log/fluentd/buffer/nginx
        </buffer>
        templates { 
          "nginx": "/fluentd/templates/nginx_template.json"
        }
        type_name _doc
        tag nginx
      </match> 

      <match systemd.**>
        @type elasticsearch
        host "#{ENV['FLUENT_OPENSEARCH_HOST']}"
        port "#{ENV['FLUENT_OPENSEARCH_PORT']}"
        user "#{ENV['FLUENT_OPENSEARCH_USER']}"
        password "#{ENV['FLUENT_OPENSEARCH_PASSWORD']}"
        scheme "https"
        logstash_format true
        logstash_prefix systemd
        ca_file "/fluentd/ssl/root-ca.pem"
        id_key msg_id
        remove_keys msg_id time
        time_key @timestamp
        reload_connections false
        reconnect_on_error true
        reload_on_failure true
        request_timeout 30s                  
        <buffer tag>
          @type file
          flush_mode immediate
          flush_at_shutdown true
          flush_thread_count 2
          overflow_action block
          retry_type periodic
          retry_forever true
          path /var/log/fluentd/buffer/systemd
        </buffer>
        templates { 
          "systemd": "/fluentd/templates/systemd_template.json"
        }
        type_name _doc
        tag systemd
      </match>   

      <match all.**>
        @type elasticsearch
        host "#{ENV['FLUENT_OPENSEARCH_HOST']}"
        port "#{ENV['FLUENT_OPENSEARCH_PORT']}"
        user "#{ENV['FLUENT_OPENSEARCH_USER']}"
        password "#{ENV['FLUENT_OPENSEARCH_PASSWORD']}"
        scheme "https"
        logstash_format true
        logstash_prefix containers
        ca_file "/fluentd/ssl/root-ca.pem"
        id_key msg_id
        remove_keys msg_id time
        time_key @timestamp
        reconnect_on_error true
        reload_on_failure true
        request_timeout 30s          
        <buffer tag>
          @type file
          flush_mode immediate
          flush_at_shutdown true
          flush_thread_count 2
          overflow_action block
          retry_type periodic
          retry_forever true
          path /var/log/fluentd/buffer/containers
        </buffer>
        templates { 
          "containers": "/fluentd/templates/containers_template.json"
        }
        type_name _doc
        tag containers
        unrecoverable_error_types ["out_of_memory_error"]
        bulk_message_request_threshold 10000000
      </match> 

  90-debug.conf: |-
    <match **>
      @type stdout
    </match>

  99-error.conf: |-
    <label @ERROR>
      <match **>
        @type file
        path /var/log/fluentd/error
        time_slice_format %Y%m%d
        time_slice_wait 10m
        time_format %Y%m%dT%H%M%S%z
        compress gzip
      </match>
    </label>

{{ end }}    