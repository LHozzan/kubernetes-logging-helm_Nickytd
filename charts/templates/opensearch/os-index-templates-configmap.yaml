apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-index-templates
data:
{{- range $path, $bytes := .Files.Glob "index-templates/*.json" }}
{{- $name := base (dir $path) }}
{{ base $path | indent 2}}: |-
{{ (tpl ($.Files.Get $path) $)| indent 4 }}
{{- end }}
  templates.sh: |-
    #!/bin/bash

    set -e

    if [ -z ${os_url+x} ]; then
      echo "opensearch url env variable (os_url) is expected but not found";
      exit -1
    elif [ -z ${os_user+x} ]; then
      echo "opensearch user env variable (os_user) is expected but not found";
      exit -1
    elif [ -z ${os_pass+x} ]; then
      echo "opensearch password env variable (os_pass) is expected but not found";
      exit -1
    fi


    templates=("component" "index")
    for type in ${templates[@]}; do
      echo
      echo "### seting up $type templates ###"
      for file in `find /templates/ -name "*_${type}_template.json" -type f`; do
        name="$(basename -- $file)"
        template=$(echo $name| cut -d'_' -f 1| cut -d'/' -f 3)

        echo "cleanup depricated cluster _template: $template"
        curl -sk -w "%{http_code}" -X DELETE -H "Content-Type: application/json" \
          -u$os_user:$os_pass "$os_url/_template/$template"
        echo
        echo "creating $type template: $template"
        curl -sk -w "%{http_code}" -X PUT -H "Content-Type: application/json" \
          -u$os_user:$os_pass "$os_url/_${type}_template/$template" -d @$file
        echo
      done
    done
