{{- if .Values.elasticsearch.in_cluster }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-curator
  labels: {{ include "logging.labels" . | indent 4 }}
spec:
  schedule: "10 0 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            "sidecar.istio.io/inject": "false"
          labels: {{ include "logging.labels" . | indent 12 }}            
            type: es-curator
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets: {{ toYaml . | nindent 10 }}
          {{- end }}
          initContainers:
          - name: init
            image: {{ include "init_container.image" . }}
            imagePullPolicy: {{ .Values.init_container_image.imagePullPolicy }}
            command: ["sh", "-c", "/init.sh {{ .Release.Name }}-client 9200 && /init.sh {{ .Release.Name }}-master 9300"]
            volumeMounts:
            - mountPath: "/init.sh"
              subPath: init.sh
              name: init
          containers:
          - name: es-curator
            image: {{ .Values.es_curator_image.image }}:{{ .Values.es_curator_image.imageTag }}
            env:
            - name: ES_HOST
              value: {{ include "esurl" . }}
            command: ["/curator/curator", "--config", "/config/curator.yml", "/config/actions.yml"]
            volumeMounts:
            - name: curator
              mountPath: "/config"
            - name: certificates
              mountPath: /etc/root-ca.pem
              subPath: root-ca.pem  
          restartPolicy: OnFailure
          volumes:
          - name: init
            configMap:
              name: {{ .Release.Name}}-init
              defaultMode: 0755 
          - name: curator
            configMap:
              name: {{ .Release.Name }}-curator
          - name: certificates
            secret:
              secretName: {{ .Release.Name }}-certificates
{{- end }}              
