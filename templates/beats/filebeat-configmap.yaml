---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name}}-filebeat-config
  labels: {{ include "logging.labels" . | indent 4 }}
data:
  filebeat.yml: |-
    logging.level: error

    tags: ["filebeat"]  
      
    processors:
      - add_id: ~
      - add_kubernetes_metadata:
          in_cluster: true
          default_indexers.enabled: false
          default_matchers.enabled: false
          indexers:
            - container:
          matchers:
            - logs_path:
                logs_path: '/logs'
                resource_type: {{ .Values.filebeat.resource_type }}
      - drop_fields:
          fields: ["kubernetes.metadata.managedFields","container"]
          ignore_missing: false              
            
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          templates:
            - condition:
                has_fields: ['kubernetes.pod.uid']
              config:
                - type: container 
                  paths:
                    - /logs/${data.kubernetes.namespace}_${data.kubernetes.pod.name}_${data.kubernetes.pod.uid}/${data.kubernetes.container.name}/*.log
                  multiline.pattern: '^}|^[[:space:]]+|^[[:cntrl:]][[:graph:]]([[:digit:]]+)[m|K]([[:space:]]+)'
                  multiline.negate: false
                  multiline.match: after
                  multiline.max_lines: 200
                         
    output.kafka:
      enabled: {{ .Values.kafka.enabled }}
      hosts: ["kafka-svc.{{ .Release.Namespace }}:9092"]
      topic: 'containers'
      partition.hash:
        reachable_only: true
      required_acks: 1
      max_message_bytes: 15728640
      client_id: "${HOSTNAME}"

    output.console:
      enabled: false
      pretty: true

    output.logstash:
      enabled: {{ printf "%t" (not .Values.kafka.enabled) }}
      hosts: ["{{ .Release.Name}}-logstash-indexer:5044"]  